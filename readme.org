* QA-edit

A web based UI to search for papers, browse parsed pdf documents, edit a SQuAD
like QA dataset.

** functionalities

FastAPI backend to handle the dataset GET/POST methods:
- load a sample (by id)
- save sample (update)

Automatically:
- load latest json file
- save json file automatically after update

** UI elements


Luckily for us html and the browser will implement many of features for us (i.e. text wrapping, text
highlighting, etc.). Which should technically make all this work much easier.

- id (input) + next/prev (buttons)
- label (combobox)
- topic (combobox)
- question (input)
- answer (input)
- context_id (combo)
- context (text area)
- passage + ref (readonly text area or paragraph)

** Feature list

QA editor:
- [8/12] Filtering view
  - [X] context id, label, topic/subtopic input
  - [X] save question/update dataset
  - [X] next/previous question
  - [X] goto question
  - [X] add question function
  - [X] serialization
  - [X] export to json
  - [X] initialization cli (set savepath, exportpath, load_latest,
    load_from json or pkl)
  - [ ] change dataset name (https://www.w3schools.com/jsref/met_win_prompt.asp)
  - [ ] word count
  - [ ] dataset statistics
  - [ ] passage reference from the counter with a link to the document browser
    page for that paper (and hyperlink to the search result by inputting name
    into angle website search bar)
- [6/9] Curation view
  - [X] *word count* (tokenize all on fly - JS)
  - [X] *Export checkbox* (n-export count - JS+HTML)
  - [X] *subtopic input* (PY+JS+HTML)
  - [X] load and export function (JSON only)
  - [X] paper lookup https://meridian.allenpress.com/angle-orthodontist/search-results?page=1&q=***PAPERTITLEHERE***&SearchSourceType=1
  - [X] add question function
  - [ ] change passage (PY+JS+HTML)
  - [ ] pdf lookup from local file with ocr (to be implemented later)
  - [ ] drag n drop image to OCR (or a similarily fast way to re-do the OCR when needed NOT TESSERACT)
- [0/4] extra
  - [ ] keybindings
  - [ ] implement advanced multiword fuzzy search/highlight with js
  - [ ] search function for contexts web and local
  - [ ] foldable article items (maybe not if you want full page search...)

Paper search: (see above)
- TBD

Document browser:
- TBD

** TODO Future refactor plan

Figure out a way to make the app more general purpose for the curation of QA datasets.

@TODO :: Start page > choose mode > choose checkpoint file > dynamic view (JS fetch data?)...
